spring:
  datasource:
#    url: { DB_URL }
#    username: { DB_USERNAME }
#    password: { DB_PASSWORD }
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  profiles:
    active: h2-profile
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
  h2:
    console:
      enabled: true
      path: /h2-console
  sql:
    init:
      mode: always
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8081/login/oauth2/code/google
            provider:
              - openid
              - profile
              - email
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo

  logging:
    level:
      org:
        springframework:
          security: DEBUG
          web: DEBUG

  mail:
    host: { GMAIL_HOST }
    port: { GMAIL_PORT }
    username: { GMAIL_USERNAME }
    password: { GMAIL_PASSWORD }
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true

jwt:
  secret: { JWT_SECRET }
  expiration: { JWT_EXPIRATION }
  refresh-exp: { JWT_REF_EXPIRATION }



storage:
  location: { STORAGE_LOCATION }
server:
  port: 8081

